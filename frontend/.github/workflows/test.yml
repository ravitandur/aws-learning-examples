name: Frontend Test Suite

on:
  push:
    branches: [ main, develop ]
    paths: [ 'frontend/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'frontend/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run linting
      run: |
        cd frontend
        npm run lint
    
    - name: Run type checking
      run: |
        cd frontend
        npx tsc --noEmit
    
    - name: Run unit tests
      run: |
        cd frontend
        npm run test:utils
    
    - name: Run service tests
      run: |
        cd frontend  
        npm run test:services
    
    - name: Run component tests
      run: |
        cd frontend
        npm run test:components
    
    - name: Run integration tests
      run: |
        cd frontend
        npm run test:integration
    
    - name: Run complete test suite with coverage
      run: |
        cd frontend
        npm run test:ci
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: true
    
    - name: Build application
      run: |
        cd frontend
        npm run build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: frontend/build/

  code-quality:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code  
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run security audit
      run: |
        cd frontend
        npm audit --audit-level=high
    
    - name: Check bundle size
      run: |
        cd frontend
        npm run build
        npx bundlemon
    
    - name: Run accessibility tests
      run: |
        cd frontend
        # Add accessibility testing tools
        echo "Accessibility tests would run here"

  deployment-readiness:
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build for production
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_ENVIRONMENT: production
    
    - name: Test production build
      run: |
        cd frontend
        npx serve -s build -p 3000 &
        sleep 10
        curl -f http://localhost:3000 || exit 1